---
# file: 03_setup_k8s_platform/update_qgis_project_playbook.yml

- name: Update QGIS Server project file
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Read default values
      ansible.builtin.include_vars:
        file: default.yml
        name: default

    - name: Read QGIS Server values
      ansible.builtin.include_vars:
        file: webgis_qgisserver.yml
        name: qgisserver

    - name: Set default facts for K8S
      ansible.builtin.set_fact:
        k8s_config: "{{ default.K8S_KUBECONFIG }}"
        k8s_context: "{{ default.K8S_CONTEXT }}"
        k8s_namespace: "{{ default.K8S_NAMESPACE_GEODATA }}"
        kubectl_pid_file: "/tmp/kubectl_pid"

    - name: Set facts for QGIS Server
      ansible.builtin.set_fact:
        qgisserver_project_file: "{{ qgisserver.env_QGIS_PROJECT_FILE }}"

    - name: Set facts to access GitLab repository
      ansible.builtin.set_fact:
        gitlab_api_url: "{{ default.GITLAB_API_URL }}"
        gitlab_api_access_token: "{{ GITLAB_API_ACCESS_TOKEN }}"
        gitlab_project: "{{ qgisserver.QGIS_CUSTOM_GITLAB_PROJECT }}"

    - name: "Get latest version of QGIS project file '{{ qgisserver_project_file }}}'"
      ansible.builtin.uri:
        url: "{{ gitlab_api_url }}/projects/{{ gitlab_project | regex_replace('\\/','%2F') }}/repository/files/{{ qgisserver_project_file | regex_replace('\\.','%2E') }}?ref=master"
        method: GET
        return_content: true
        headers:
          PRIVATE-TOKEN: "{{ gitlab_api_access_token }}"
      register: qgis_file

    - name: Decode QGIS project file payload
      ansible.builtin.set_fact:
        qgis_file_content: "{{ qgis_file.json.content | regex_replace('\n','') | b64decode }}"
      when: qgis_file is defined

    - name: "Update ConfigMap {{ qgisserver_project_file }}"
      kubernetes.core.k8s:
        kubeconfig: "{{ k8s_config }}"
        context: "{{ k8s_context }}"
        namespace: "{{ k8s_namespace }}"
        definition:
          kind: ConfigMap
          api_version: v1
          metadata:
            name: "{{ qgisserver_project_file }}"
            namespace: "{{ k8s_namespace | lower }}"
          data:
            project.qgs: "{{ qgis_file_content }}"
        state: present
        apply: yes
      register: cm_project_qgis
      when: qgis_file_content is defined

    - name: Get deployment info of QGIS Server
      kubernetes.core.k8s_info:
        kubeconfig: "{{ k8s_config }}"
        context: "{{ k8s_context }}"
        namespace: "{{ k8s_namespace }}"
        kind: Deployment
        label_selectors:
          - app=webgis-qgisserver
          - component=server
      register: qgis_server_deployment_info

    - debug:
        msg: "Name of deployment: {{ qgis_server_deployment_info['resources'][0]['metadata']['name'] }}"

    - name: Get name of QGIS Server deployment
      ansible.builtin.set_fact:
        qgis_server_deployment_name: "{{ qgis_server_deployment_info['resources'][0]['metadata']['name'] }}"
      when: qgis_server_deployment_info is defined

    - name: Restart deployment of QGIS Server
      ansible.builtin.shell: |
        kubectl --kubeconfig="{{ k8s_config }}" --namespace "{{ k8s_namespace | lower }}" rollout restart deployment "{{ qgis_server_deployment_name }}"
      args:
        executable: /bin/bash
      when:
        - cm_project_qgis.changed
        - qgis_server_deployment_name is defined
