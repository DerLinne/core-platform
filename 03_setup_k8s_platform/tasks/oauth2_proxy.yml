---
- name: Create a k8s namespace
  community.kubernetes.k8s:
    name: "{{ oauth_proxy_namespace }}"
    api_version: v1
    kind: Namespace
    state: present

- name: Deploy oauth2-proxy
  k8s:
    state: present
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        labels:
          k8s-app: oauth2-proxy
        name: oauth2-proxy
        namespace: "{{ oauth_proxy_namespace }}"
      spec:
        replicas: 1
        selector:
          matchLabels:
            k8s-app: oauth2-proxy
        template:
          metadata:
            labels:
              k8s-app: oauth2-proxy
          spec:
            containers:
            - args:
              - --provider=oidc
              - --provider-display-name="Keycloak {{ DOMAIN}}"
              - --client-id={{ IDM_CLIENT }}
              - --client-secret={{ IDM_CLIENT_SECRET }}
              - --oidc-issuer-url={{ IDM_ENDP_ISSUER }}
              - --upstream=file:///dev/null
              - --email-domain=*
              - --whitelist-domain=.{{ DOMAIN }}
              - --http-address=0.0.0.0:4180
              - --cookie-secret=lnN4HZrAOH2lQioaJ3i12g==
              - --cookie-secure=true
              - --pass-authorization-header=true
              - --set-authorization-header=true
              - --cookie-domain={{ DOMAIN }}
              env:
              - name: OAUTH2_PROXY_COOKIE_SECRET
                value: "{{ oauth_proxy_secret }}"
              image: quay.io/oauth2-proxy/oauth2-proxy:latest
              imagePullPolicy: Always
              name: oauth2-proxy
              ports:
              - containerPort: 4180
                protocol: TCP

- name: Deploy oauth2-proxy service
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        labels:
          k8s-app: oauth2-proxy
        name: oauth2-proxy
        namespace: "{{ oauth_proxy_namespace }}"
      spec:
        ports:
        - name: http
          port: 4180
          protocol: TCP
          targetPort: 4180
        selector:
          k8s-app: oauth2-proxy

- name: Deploy oauth2-proxy
  k8s:
    state: present
    definition:
      apiVersion: networking.k8s.io/v1beta1
      kind: Ingress
      metadata:
        annotations:
          kubernetes.io/ingress.class: "{{ INGRESS_DEFAULT_CLASS }}"
          kubernetes.io/tls-acme: "true"
          nginx.ingress.kubernetes.io/proxy-buffer-size: "8k"
        name: auth-oauth2
        namespace: "{{ oauth_proxy_namespace }}"
      spec:
        rules:
        - host: oauth.{{ DOMAIN }}
          http:
            paths:
            - backend:
                serviceName: oauth2-proxy
                servicePort: 4180
              path: /
        tls:
        - hosts:
          - oauth.{{ DOMAIN }}
          secretName: oauth-proxy-secret


