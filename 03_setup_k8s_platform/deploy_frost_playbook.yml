---
# file: 03_setup_k8s_platform/deploy_frost_playbook.yml
- name: Deploy FROST
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Read default values
      ansible.builtin.include_vars:
        file: default.yml
        name: default

    - name: Read FROST values
      ansible.builtin.include_vars:
        file: frost_frost.yml
        name: frost

    - name: Set default facts for K8S
      ansible.builtin.set_fact:
        k8s_config: "{{ default.K8S_KUBECONFIG }}"
        k8s_context: "{{ default.K8S_CONTEXT }}"
        k8s_namespace: "{{ default.K8S_NAMESPACE_FROST }}"

    - name: Set facts for ChartMuseum
      ansible.builtin.set_fact:
        cm_port: "{{ default.CM_PORT }}"
        cm_storage: "{{ default.CM_STORAGE }}"
        cm_storage_local_rootdir: "{{ default.CM_STORAGE_LOCAL_ROOTDIR }}"
        cm_context_path: "{{ default.CM_CONTEXT_PATH }}"
        helm_repo_url: "{{ default.HELM_REPO_URL }}"
        helm_repo_name: "{{ default.HELM_REPO_NAME }}"

    - name: Set facts for FROST Helm chart
      ansible.builtin.set_fact:
        frost_helm_repo_name: "{{ frost.HELM_REPO_NAME }}"
        frost_helm_repo_url: "{{ frost.HELM_REPO_URL }}"
        frost_helm_chart_name: "{{ frost.HELM_CHART_NAME }}"
        frost_helm_release_name: "{{ frost.HELM_RELEASE_NAME }}"

    - name: Add FROST Helm repo
      community.kubernetes.helm_repository:
        name: "{{ frost_helm_repo_name }}"
        url: "{{ frost_helm_repo_url }}"

    # - name: Read PostgreSQL operator values
    #   ansible.builtin.include_vars:
    #     file: postgres_operator.yml
    #     name: postgres

    # - name: Set facts for FROST PostGIS (Zalondo operator)
    #   ansible.builtin.set_fact:
    #     frost.cluster_team: @TODO
    #     frost.cluster_name: @TODO

    # - name: Deploy PostGIS server for FROST via Zalando operator
    #   community.kubernetes.k8s:
    #     state: present
    #     namespace: "{{ default.K8S_NAMESPACE_DATA_MANAGEMENT_OPERATOR }}"
    #     kubeconfig: "{{ k8s_config }}"
    #     context: "{{ k8s_context }}"
    #     definition:
    #       kind: "postgresql"
    #       apiVersion: "acid.zalan.do/v1"
    #       metadata:
    #         name: "{{ frost.cluster_team }}-{{ frost.cluster_name }}"
    #         namespace: "{{ k8s_namespace }}"
    #         labels:
    #           team: "{{ frost.cluster_team }}"
    #       spec:
    #         teamId: "{{ frost.cluster_team }}"
    #         postgresql:
    #           version: "11"
    #         numberOfInstances: 2
    #         enableMasterLoadBalancer: true
    #         volume:
    #           size: "20Gi"
    #         users:
    #           contextdata: []
    #         databases:
    #           contextdata: contextdata
    #         allowedSourceRanges:
    #           # IP ranges to access your cluster go here
    #         resources:
    #           requests:
    #             cpu: 100m
    #             memory: 100Mi
    #           limits:
    #             cpu: 500m
    #             memory: 500Mi

    # - name: Create PostGIS extension
    #   command: |
    #     kubectl --kubeconfig {{ k8s_config }} -n {{ k8s_namespace }}
    #       exec -it {{ frost.cluster_team }}-{{ frost.cluster_name }}-0
    #       -- bash -c "psql -U {{ postgres.super_username }} -d {{ frost.database}} -c 'CREATE EXTENSION postgis;'"
    #   register: result
    #   until: result.rc == 0
    #   retries: 10
    #   delay: 5
    #   changed_when: True

    - name: Install Helm package with values loaded from template
      community.kubernetes.helm:
        name: "{{ frost_helm_release_name }}"
        chart_ref: "{{ frost_helm_repo_name }}/{{ frost_helm_chart_name }}"
        kubeconfig: "{{ k8s_config }}"
        context: "{{ k8s_context }}"
        release_namespace: "{{ k8s_namespace }}"
        update_repo_cache: true
        create_namespace: true
        values: "{{ lookup('template', 'templates/frost/frost_values.yaml.j2') | from_yaml }}"
